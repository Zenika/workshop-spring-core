<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd">

	<import resource="classpath:/application-components.xml" />
	<import resource="classpath:/transaction.xml" />
	<import resource="classpath:/aop.xml" />

	<!-- TODO 04 analyser les deux profils -->
	<!-- l'un correspond à une configuration de dév ou de test, 
	l'autre à configuration plus proche de la production. 
	Noter que le profil de production externalise la configuration
	de la base de données avec un fichier properties et un property-placeholder.
	Regarder le contenu du fichier application-configuration.properties (à la racine du projet).
	 -->
	<beans profile="in-memory-db">
		<jdbc:embedded-database id="dataSource" type="H2">
			<jdbc:script location="classpath:/create-tables.sql" />
			<jdbc:script location="classpath:/insert-data.sql" />
		</jdbc:embedded-database>
	</beans>
	
	<beans profile="standalone-db">
		<!-- ne surtout PAS utiliser ce DataSource en production ! -->
		<bean id="dataSource" class="org.springframework.jdbc.datasource.SingleConnectionDataSource">
			<property name="driverClassName" value="${db.driver}" />
			<property name="url" value="${db.url}" />
			<property name="username" value="${db.username}" />
			<property name="password" value="${db.password}" />
			<property name="suppressClose" value="true" /> <!-- l'unique connexion reste ouverte -->
		</bean>
		
		<context:property-placeholder location="file:./application-configuration.properties"/>
		
	</beans>

</beans>
